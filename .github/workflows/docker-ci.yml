name: Build and Push Docker Image.

on:
  release:
    types:
      - created  # Trigger only when a new release is created

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME }}/dtgbotmenu
          tags: ${{ github.ref_name }}
          labels: |
            org.opencontainers.image.title=dtgbotmenu
            org.opencontainers.image.description=Telegram Bot Menu for Domoticz
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm/v7  # Add ARMv7 support
          tags: |
            ${{ vars.DOCKER_USERNAME }}/dtgbotmenu:${{ github.ref_name }}
            ${{ vars.DOCKER_USERNAME }}/dtgbotmenu:${{ github.event.release.prerelease && 'prerelease' || 'latest' }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: true
          sbom: true
          build-args: |
            GIT_RELEASE=${{ github.ref_name }}${{ github.event.release.prerelease && '-dev' || '' }}

      - name: Upload README.md to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ vars.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          # Get JWT token
          TOKEN=$(curl -s -H "Content-Type: application/json" \
            -X POST \
            -d "{\"username\": \"${DOCKERHUB_USERNAME}\", \"password\": \"${DOCKER_PASSWORD}\"}" \
            https://hub.docker.com/v2/users/login/ | jq -r .token)

          # Upload README.md as full_description
          DESCRIPTION=$(jq -Rs . < README.md)

          curl -s -X PATCH \
            -H "Authorization: JWT ${TOKEN}" \
            -H "Content-Type: application/json" \
            -d "{\"full_description\": ${DESCRIPTION}}" \
            https://hub.docker.com/v2/repositories/${DOCKERHUB_USERNAME}/dtgbotmenu/
